on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types:
      - published

concurrency:
  group: cicd
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - windows-latest
          # - macos-11
        python-version:
          - 3.7
          - 3.8
          - 3.9
          - "3.10"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Install Python version
        run: |
          python scripts/make_setup.py 0
          pip install -e .

      - name: Install CPP version
        run: |
          python scripts/make_setup.py 1
          pip install -e .

      - name: Test
        run: make test

      - name: "Upload coverage to Codecov"
        if: matrix.python-version == 3.8 && matrix.os == 'ubuntu-18.04'
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

#-------------------------------------------------------------------------------
  build_cpp_wheels:
    name: Build CPP wheels on ${{ matrix.os }} ${{ matrix.cpv }}
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'release' && github.event.action == 'published' && !github.event.release.prerelease

    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - windows-latest
          - macos-11
        cpv:
          #- "cp36*"
          - "cp37*"
          - "cp38*"
          - "cp39*"
          - "cp310*"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.5.0

      - name: Build wheels
        env:
          CIBW_BUILD:  ${{ matrix.cpv }}
          CIBW_SKIP: "*macosx_10_*"
          CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET='11.6.5'
        run: |
          python scripts/make_setup.py 1
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          name: cpp
          path: ./wheelhouse/*.whl

  build_mac_cpp_wheels:
    name: Build Mac CPP wheels on ${{ matrix.os }} ${{ matrix.cpv }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - macos-11
        cpv:
          - "cp310*"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.5.0

      - name: Build wheels
        env:
          CIBW_BUILD:  ${{ matrix.cpv }}
          CIBW_SKIP: "*macosx_10_*"
          CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET='11.6.5'
        run: |
          python scripts/make_setup.py 1
          python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          name: cpp
          path: ./wheelhouse/*.whl

#-------------------------------------------------------------------------------
  build_cpp_sdist:
    name: Build CPP source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8

      - name: Build sdist
        run: |
          python scripts/make_setup.py 1
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          name: cpp
          path: dist/*.tar.gz

  build_py_sdist:
    name: Build Python source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8

      - name: Build sdist
        run: |
          python scripts/make_setup.py 0
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          name: py
          path: dist/*.tar.gz

#-------------------------------------------------------------------------------
  deploy_cpp:
    needs:
      - test
      - build_cpp_wheels
      - build_cpp_sdist

    runs-on: ubuntu-latest

    # Only publish when a GitHub Release is created.
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: cpp
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

  deploy_py:
    needs:
      - test
      - build_py_sdist

    runs-on: ubuntu-latest

    # Only publish when a GitHub Release is created.
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: py
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
